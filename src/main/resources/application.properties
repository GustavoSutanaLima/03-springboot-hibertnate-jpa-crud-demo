spring.application.name=springboot-hibertnate-jpa-crud-demo

#Conexão com o banco de dados local;
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/student_tracker
spring.datasource.username=springstudent
spring.datasource.password=springstudent
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect


#Desligando o banner do Spring (que aparece nos logs ao inicializar uma aplicação Spring)
spring.main.banner-mode=off


#Reduzindo a quantidade de log apenas para warn (mostra apenas warnings e erros);

#logging.level.root=warn

#O Spring é capaz de gerar tabelas automaticamente sem necessidade de digitar código SQL
#isso é feito através do Spring Data JPA que utiliza o Hibernate para fazer o data access object
#para habilitar a criação de tabelas automaticamente baseda nas etidades do projeto, basta
#usar a seguinte linha de código abaixo:
spring.jpa.hibernate.ddl-auto=update
######ATENÇÃO###### : CREATE dropa todas as tabelas do DB para depois recriá-las novamente, baseado na classes anotadas com @Entity, por isso, toda informação do DB é perdida (destroys the database to create it again);
######ATENÇÃO###### : UPDATE apenas atualiza as informações das tabelas do DB (keeps the database intact);
###ATENÇÃO###       : NÃO USE EM TABELAS DE PRODUÇÃO POIS É MUITO FÁCIL DROPAR O BANCO DE DADOS COM ESSA CONFIGURAÇÃO;

#Mostrando mais informações nos logs do database:
#mostra os logs relacioados aos comandos SQL
logging.level.org.hibernate.SQL=debug
#deixa de omitir os valores dos comandos SQL nos logs;
logging.level.org.hibernate.orm.jdbc.bind=trace 